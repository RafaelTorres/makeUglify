#!/usr/bin/env node

var UglifyJS = require('uglify-js');
var fs       = require('fs');
var wrench   = require('wrench');
var colorize = require('colorize');
var cconsole = colorize.console;
var path     = require('path');
var program  = require('commander');
var FilesInFolder = [];
var folderpath = "";

program
.version('0.0.35')
.option('-p, --path <pa>','Enter Folder name')
.parse(process.argv);

if(program.path){
  listFiles(program.path);
};

function listFiles(folder){
  folderpath = folder;
  var r = folderExists(folder);
  if(r){
    var fl = wrench.readdirSyncRecursive(folder);
    for(var i=0; i<fl.length; i++){

      if(path.extname(fl[i]) === ".js"){

          var pathFolder = path.resolve(path.join(__dirname,folder,fl[i]));
          var pathfinal = pathFolder + "/"+fl[i];
          FilesInFolder.push(pathFolder);
          //cconsole.log("#green["+pathFolder+"]");
          console.log(path.join(__dirname,"testuglify"));
          minimizer(path.join(__dirname,folder,fl[i]));
              
      }   
    }

   cconsole.log('Files Found in #green[' + folder + '] = #green['+ FilesInFolder.length+']'); 
   //compressingFiles();
            
  }
  else{
    cconsole.log('#red[Folder #bold["' + folder + '"] does not exist]'); 
  };
};


function folderExists(path){
    try{
       var r = fs.statSync(path).isDirectory(); 
       return r;
    }
    catch(er){
       return false;
    };
};

function compressingFiles(){
    for(var i=0; i<FilesInFolder.length; i++){
        //cconsole.log('#green['+FilesInFolder[i]+']');
        minimizer(FilesInFolder[i]);
    }
};


function minimizer(file){  
      
    try{

        console.log("================================");
        cconsole.log("#green["+file+"]");
        var result   = UglifyJS.minify(file);
        cconsole.log('#blue['+result.code+']'); 
        //rewrite(file,result.code);

    }
    catch(err){     
         cconsole.log("#red["+file+"]");

    }; 
};

function rewrite(nameFile, arg){
  fs.writeFile(nameFile,arg,function(err){
      if(err){
        cconsole.log("#red[Error Writing File: " + nameFile + "]");
        //throw err;
      }
      else{
        cconsole.log("#green[File Written: " + nameFile +"]");
      };
  });
}; 





















   /* fl.forEach(function(item){
        var pathFolder = path.resolve(path.join(__dirname, folder));
        var  finalpath = pathFolder+"/"+item;
        if(fs.statSync(item).isFile()){
            if(path.extname(item) === ".js"){
               cconsole.log('- #green["' + finalpath+ '"]'); 
              // FilesInFolder.push(finalpath);

               amoundFiles = amoundFiles + 1;
            }; 
        };   
    });*/
