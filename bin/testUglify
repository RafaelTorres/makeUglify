#!/usr/bin/env node

var UglifyJS = require('uglify-js');
var fs       = require('fs');
var wrench   = require('wrench');
var colorize = require('colorize');
var cconsole = colorize.console;
var path     = require('path');
var program  = require('commander');
var FilesInFolder = [];
var folderpath = "";

program
.version('0.0.45')
.option('-p, --path <pa>','Enter Folder name')
.parse(process.argv);

if(program.path){
  listFiles(program.path);
};

function listFiles(folder){
  folderpath = folder;
  var r = folderExists(folder);
  if(r){
     var fl = wrench.readdirSyncRecursive(folder);
    for(var i=0; i<fl.length; i++){
       if(path.extname(fl[i]) === ".js"){

          var pathFolder = path.resolve(folder);
          var pathfinal = pathFolder+"/"+fl[i];
          FilesInFolder.push(pathfinal );
        }   
    }

    cconsole.log('Files Found in #green[' + folder + '] = #green['+ FilesInFolder.length+']'); 
    compressingFiles();          
  }
  else{
    cconsole.log('#red[Folder #bold["' + folder + '"] does not exist]'); 
  };
};


function folderExists(path){
    try{
       var r = fs.statSync(path).isDirectory(); 
       return r;
    }
    catch(er){
       return false;
    };
};

function compressingFiles(){
    var files = FilesInFolder.shift();
    minimizer(files,function(){
        if(FilesInFolder.length > 0){
           compressingFiles();
        }
        else{
          cconsole.log("#green[Process  sucefully]");
        };
    });
};


function minimizer(file,cb){      
    try{

      var result   = UglifyJS.minify(file);

        /*rewrite(file,result.code,function(){
            cb();
        });*/

      fs.writeFile(file,result.code,function(err){
        if(err){
          cconsole.log("#red[Error Writing File: " + nameFile + "]");
         
        }
        else{
          cconsole.log("#green[File Written: " + nameFile +"]");      
        };
      });

      cb();
    }
    catch(err){     
         cconsole.log("#red[Error in the  File"+file+"]");
         cb();
    }; 
};

function rewrite(nameFile, arg,cb){
  fs.writeFile(nameFile,arg,function(err){
    if(err){
      cconsole.log("#red[Error Writing File: " + nameFile + "]");
      cb();
    }
    else{
      cconsole.log("#green[File Written: " + nameFile +"]");
      cb();       
    };
  }); 
};



